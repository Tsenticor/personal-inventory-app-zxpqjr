
import React, { useState, useCallback } from 'react';
import {
  View,
  Text,
  ScrollView,
  Pressable,
  Alert,
} from 'react-native';
import { router, useFocusEffect } from 'expo-router';
import { IconSymbol } from '@/components/IconSymbol';
import { commonStyles, colors } from '@/styles/commonStyles';
import { storageService } from '@/services/storageService';
import { InventoryItem, Section, EventLog } from '@/types/inventory';

export default function MoreScreen() {
  const [stats, setStats] = useState({
    totalItems: 0,
    totalValue: 0,
    totalWeight: 0,
    sectionsCount: 0,
    loanedItems: 0,
  });
  const [recentEvents, setRecentEvents] = useState<EventLog[]>([]);

  const loadData = async () => {
    try {
      const [items, sections, events] = await Promise.all([
        storageService.getItems(),
        storageService.getSections(),
        storageService.getEvents(),
      ]);

      const totalItems = items.reduce((sum, item) => sum + item.quantity, 0);
      const totalValue = items.reduce((sum, item) => sum + (item.price * item.quantity), 0);
      const totalWeight = items.reduce((sum, item) => sum + (item.weight * item.quantity), 0);
      const loanedItems = items.filter(item => item.isOnLoan).length;

      setStats({
        totalItems,
        totalValue,
        totalWeight,
        sectionsCount: sections.length,
        loanedItems,
      });

      setRecentEvents(events.slice(0, 5));
    } catch (error) {
      console.log('Error loading stats:', error);
    }
  };

  useFocusEffect(
    useCallback(() => {
      loadData();
    }, [])
  );

  const menuItems = [
    {
      title: '–ò—Å—Ç–æ—Ä–∏—è —Å–æ–±—ã—Ç–∏–π',
      subtitle: '–ü—Ä–æ—Å–º–æ—Ç—Ä –∂—É—Ä–Ω–∞–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π',
      icon: 'clock.fill',
      onPress: () => {
        router.push('/events');
      },
    },
    {
      title: '–¶–µ–ª–∏ –∏ –∑–∞–¥–∞—á–∏',
      subtitle: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–ª—è–º–∏ –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏',
      icon: 'target',
      onPress: () => {
        // TODO: Navigate to goals
        Alert.alert('–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', '–§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö');
      },
    },
    {
      title: '–ó–∞–º–µ—Ç–∫–∏',
      subtitle: '–¢–µ–∫—Å—Ç–æ–≤—ã–µ –∑–∞–º–µ—Ç–∫–∏ –∏ —Å–≤—è–∑–∏',
      icon: 'note.text',
      onPress: () => {
        // TODO: Navigate to notes
        Alert.alert('–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', '–§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö');
      },
    },
    {
      title: '–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö',
      subtitle: '–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ–±–º–µ–Ω',
      icon: 'square.and.arrow.up',
      onPress: () => {
        // TODO: Implement export
        Alert.alert('–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', '–§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö');
      },
    },
    {
      title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
      subtitle: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
      icon: 'gearshape.fill',
      onPress: () => {
        // TODO: Navigate to settings
        Alert.alert('–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', '–§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö');
      },
    },
  ];

  const formatEventTime = (date: Date) => {
    const now = new Date();
    const diffTime = now.getTime() - date.getTime();
    const diffMinutes = Math.floor(diffTime / (1000 * 60));
    const diffHours = Math.floor(diffMinutes / 60);
    const diffDays = Math.floor(diffHours / 24);

    if (diffMinutes < 1) {
      return '–¢–æ–ª—å–∫–æ —á—Ç–æ';
    } else if (diffMinutes < 60) {
      return `${diffMinutes} –º–∏–Ω –Ω–∞–∑–∞–¥`;
    } else if (diffHours < 24) {
      return `${diffHours} —á –Ω–∞–∑–∞–¥`;
    } else {
      return `${diffDays} –¥–Ω –Ω–∞–∑–∞–¥`;
    }
  };

  const getEventIcon = (type: string) => {
    switch (type) {
      case 'created': return '‚ûï';
      case 'updated': return '‚úèÔ∏è';
      case 'moved': return 'üì¶';
      case 'deleted': return 'üóëÔ∏è';
      case 'loaned': return 'üì§';
      case 'returned': return 'üì•';
      case 'archived': return 'üìÅ';
      case 'restored': return '‚ôªÔ∏è';
      case 'copied': return 'üìã';
      default: return 'üìã';
    }
  };

  return (
    <ScrollView style={commonStyles.container} contentContainerStyle={{ paddingBottom: 100 }}>
      {/* Statistics */}
      <View style={[commonStyles.card, { margin: 16 }]}>
        <Text style={[commonStyles.subtitle, { marginBottom: 16 }]}>
          üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        </Text>
        
        <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>
          <View style={{ width: '50%', marginBottom: 12 }}>
            <Text style={[commonStyles.text, { fontWeight: '600' }]}>
              {stats.totalItems}
            </Text>
            <Text style={commonStyles.textSecondary}>–í—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤</Text>
          </View>
          
          <View style={{ width: '50%', marginBottom: 12 }}>
            <Text style={[commonStyles.text, { fontWeight: '600' }]}>
              {stats.totalValue.toLocaleString()}‚ÇΩ
            </Text>
            <Text style={commonStyles.textSecondary}>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</Text>
          </View>
          
          <View style={{ width: '50%', marginBottom: 12 }}>
            <Text style={[commonStyles.text, { fontWeight: '600' }]}>
              {stats.totalWeight.toFixed(1)} –∫–≥
            </Text>
            <Text style={commonStyles.textSecondary}>–û–±—â–∏–π –≤–µ—Å</Text>
          </View>
          
          <View style={{ width: '50%', marginBottom: 12 }}>
            <Text style={[commonStyles.text, { fontWeight: '600' }]}>
              {stats.sectionsCount}
            </Text>
            <Text style={commonStyles.textSecondary}>–†–∞–∑–¥–µ–ª–æ–≤</Text>
          </View>
        </View>

        {stats.loanedItems > 0 && (
          <View style={{
            backgroundColor: '#FFF3CD',
            padding: 12,
            borderRadius: 8,
            marginTop: 12,
          }}>
            <Text style={[commonStyles.text, { fontWeight: '600' }]}>
              ‚ö†Ô∏è {stats.loanedItems} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ –≤—ã–¥–∞—á–µ
            </Text>
          </View>
        )}
      </View>

      {/* Recent Events */}
      {recentEvents.length > 0 && (
        <View style={[commonStyles.card, { marginHorizontal: 16, marginBottom: 16 }]}>
          <View style={{
            flexDirection: 'row',
            justifyContent: 'space-between',
            alignItems: 'center',
            marginBottom: 16,
          }}>
            <Text style={commonStyles.subtitle}>
              üïí –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
            </Text>
            <Pressable onPress={() => router.push('/events')}>
              <Text style={[commonStyles.text, { color: colors.primary, fontSize: 14 }]}>
                –í—Å–µ —Å–æ–±—ã—Ç–∏—è
              </Text>
            </Pressable>
          </View>
          
          {recentEvents.map((event, index) => (
            <Pressable
              key={event.id}
              style={{
                flexDirection: 'row',
                alignItems: 'center',
                paddingVertical: 8,
                borderBottomWidth: index < recentEvents.length - 1 ? 1 : 0,
                borderBottomColor: colors.border,
              }}
              onPress={() => router.push('/events')}
            >
              <Text style={{ fontSize: 16, marginRight: 12 }}>
                {getEventIcon(event.type)}
              </Text>
              <View style={{ flex: 1 }}>
                <Text style={[commonStyles.text, { fontSize: 14 }]} numberOfLines={1}>
                  {event.description}
                </Text>
                <Text style={[commonStyles.textSecondary, { fontSize: 12 }]}>
                  {formatEventTime(event.timestamp)}
                </Text>
              </View>
              <IconSymbol name="chevron.right" size={12} color={colors.textSecondary} />
            </Pressable>
          ))}
        </View>
      )}

      {/* Menu Items */}
      <View style={{ paddingHorizontal: 16 }}>
        {menuItems.map((item, index) => (
          <Pressable
            key={index}
            style={[commonStyles.listItem, { marginBottom: 8 }]}
            onPress={item.onPress}
          >
            <View style={{
              width: 40,
              height: 40,
              borderRadius: 20,
              backgroundColor: colors.primary,
              justifyContent: 'center',
              alignItems: 'center',
              marginRight: 12,
            }}>
              <IconSymbol name={item.icon as any} size={20} color="white" />
            </View>
            
            <View style={{ flex: 1 }}>
              <Text style={[commonStyles.text, { fontWeight: '600', marginBottom: 2 }]}>
                {item.title}
              </Text>
              <Text style={commonStyles.textSecondary}>
                {item.subtitle}
              </Text>
            </View>
            
            <IconSymbol name="chevron.right" size={16} color={colors.textSecondary} />
          </Pressable>
        ))}
      </View>

      {/* App Info */}
      <View style={[commonStyles.card, { margin: 16 }]}>
        <Text style={[commonStyles.subtitle, { marginBottom: 8 }]}>
          üì± –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
        </Text>
        <Text style={commonStyles.textSecondary}>
          –ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ç–æ—Ä v1.0.0{'\n'}
          –õ–æ–∫–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É—á—ë—Ç–∞ –ª–∏—á–Ω—ã—Ö –≤–µ—â–µ–π{'\n'}
          –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
        </Text>
      </View>
    </ScrollView>
  );
}
